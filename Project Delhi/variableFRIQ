#include <SPI.h>
#include <MD_AD9833.h>

// Pins for SPI link with the AD9833
#define DATA  11  // SPI Data pin number (hardware SPI = 11)
#define CLK   13  // SPI Clock pin number (hardware SPI = 13)
#define FSYNC 10  // SPI Load pin number (FSYNC in AD9833 usage)

MD_AD9833 AD(FSYNC); // Hardware SPI

#define BTN   2   // Input Button (active low)

const uint32_t frequencyList[] = {1, 10, 100, 1000, 10000, 100000, 500000, 1000000}; // Frequencies in Hz
const int totalFrequencies = sizeof(frequencyList) / sizeof(frequencyList[0]);

int currentFreqIndex = 0;
int lastButtonState = HIGH;

void setup() {
  pinMode(BTN, INPUT_PULLUP);
  pinMode(LED_BUILTIN, OUTPUT);
  AD.begin();
  
  AD.setMode(MD_AD9833::MODE_SINE); // Default to SINE wave
  AD.setFrequency(MD_AD9833::CHAN_0, frequencyList[currentFreqIndex]);
}

void loop() {
  int buttonState = digitalRead(BTN);

  if ((buttonState == LOW) && (lastButtonState == HIGH)) {
    // Button was pressed (falling edge detected)
    currentFreqIndex++;
    if (currentFreqIndex >= totalFrequencies) {
      currentFreqIndex = 0; // Loop back to start
    }

    AD.setFrequency(MD_AD9833::CHAN_0, frequencyList[currentFreqIndex]);

    digitalWrite(LED_BUILTIN, HIGH); // Blink LED to show button press
    delay(100);
    digitalWrite(LED_BUILTIN, LOW);

    delay(300); // Crude debounce delay
  }

  lastButtonState = buttonState;
}
